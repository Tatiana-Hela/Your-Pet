{"version":3,"file":"static/js/339.ae4399c4.chunk.js","mappings":"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","sources":["webpack://your-pet-frontend/./src/modules/RegisterForm/registerFormDetails.module.css?8126","modules/RegisterForm/RegisterFormDetails.jsx","modules/RegisterForm/RegisterForm.jsx","webpack://your-pet-frontend/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerFormDetails_form__wOm+e\",\"title\":\"registerFormDetails_title__pAFRD\",\"questionText\":\"registerFormDetails_questionText__V7bgL\",\"loginLink\":\"registerFormDetails_loginLink__yz5Gz\",\"buttonContainer\":\"registerFormDetails_buttonContainer__5y6Jx\",\"button\":\"registerFormDetails_button__VJfUX\",\"myСomponent\":\"registerFormDetails_myСomponent__-z0dL\",\"dark\":\"registerFormDetails_dark__wzPUm\"};","import { useState, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { ThemeContext } from 'shared/hooks/context/ThemeProvider';\nimport { useTranslation } from 'react-i18next';\n\nimport { TextField, IconButton, Box } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { blue } from '@mui/material/colors';\n\nimport css from './registerFormDetails.module.css';\n\nimport { register } from 'redux/auth/auth-operations';\n\nconst registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name is required')\n    .matches(/^[a-zA-Z\\s]*$/),\n  email: yup\n    .string()\n    .email('Invalid email')\n    .required('Email is required')\n    .matches(\n      /^(?=.{10,63}$)(([0-9A-Za-z]{1}[-0-9A-z.]{1,}[0-9A-Za-z]{1})@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/,\n      'Invalid email'\n    ),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst data = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport const RegisterFormDetails = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const { theme } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  \n  const navigate = useNavigate();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleClickShowConfirmPassword = () =>\n    setShowConfirmPassword(show => !show);\n\n  const dispatch = useDispatch();\n  const handleFormSubmit = async values => {\n    const data = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    await dispatch(register(data));\n    navigate('/user');\n  };\n\n  return (\n    <>\n      <div\n        className={`${css.myСomponent} ${\n          theme === 'light' ? css.light : css.dark\n        }`}\n      >\n        <Formik\n          initialValues={data}\n          onSubmit={handleFormSubmit}\n          validationSchema={registerSchema}\n        >\n          {({ values, errors, touched, handleSubmit, handleChange }) => (\n            <Form className={css.form} onSubmit={handleSubmit}>\n              <h2 className={css.title}>{t(\"Registration\")}</h2>\n              <Box\n                sx={{\n                  marginBottom: '10px',\n                  display: 'flex',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <TextField\n                  name=\"name\"\n                  type=\"text\"\n                  label={t(\"Name\")}\n                  size=\"small\"\n                  fullWidth\n                  sx={{\n                    '.MuiInputBase-root.MuiOutlinedInput-root': {\n                      borderRadius: '40px',\n                    },\n                    '& .MuiInputLabel-root': {\n                      color: theme === 'dark' && '#b2abab',\n                    },\n                    '& .MuiInputLabel-root.Mui-focused': {\n                      color: theme === 'light' ? '#54ADFF' : '#183a3d',\n                    },\n                    '& .MuiOutlinedInput-root': {\n                      '& fieldset': {\n                        borderRadius: 40,\n                        // border: `1px solid #54ADFF`,\n                        border: `1px solid ${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n                      '&:hover fieldset': {\n                        // borderColor: '#54ADFF',\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#d9d2d2'\n                        }`,\n                      },\n                      '&.Mui-focused fieldset': {\n                        // borderColor: '#54ADFF',\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                        borderWidth: '2px',\n                      },\n                      '& .MuiInputBase-input': {\n                        color: theme === 'dark' && '#d9d2d2',\n                      },\n                    },\n                  }}\n                  onChange={handleChange}\n                  value={values.name}\n                  error={touched.name && Boolean(errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n              </Box>\n              <Box\n                sx={{\n                  marginBottom: '10px',\n                  display: 'flex',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <TextField\n                  name=\"email\"\n                  type=\"email\"\n                  label={t(\"Email\")}\n                  size=\"small\"\n                  fullWidth\n                  sx={{\n                    '.MuiInputBase-root.MuiOutlinedInput-root': {\n                      borderRadius: '40px',\n                    },\n                    '& .MuiInputLabel-root': {\n                      color: theme === 'dark' && '#b2abab',\n                    },\n                    '& .MuiInputLabel-root.Mui-focused': {\n                      color: theme === 'light' ? '#54ADFF' : '#183a3d',\n                    },\n                    '& .MuiOutlinedInput-root': {\n                      '& fieldset': {\n                        borderRadius: 40,\n                        border: `1px solid ${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n                      '&:hover fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#d9d2d2'\n                        }`,\n                      },\n                      '&.Mui-focused fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                        borderWidth: '2px',\n                      },\n                      '& .MuiInputBase-input': {\n                        color: theme === 'dark' && '#d9d2d2',\n                      },\n                    },\n                  }}\n                  onChange={handleChange}\n                  value={values.email}\n                  error={touched.email && Boolean(errors.email)}\n                  helperText={touched.email && errors.email}\n                />\n              </Box>\n              <Box\n                sx={{\n                  marginBottom: '10px',\n                  display: 'flex',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <TextField\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  label={t(\"Password\")}\n                  size=\"small\"\n                  fullWidth\n                  sx={{\n                    '& .MuiInputLabel-root': {\n                      color: theme === 'dark' && '#b2abab',\n                    },\n                    '& .MuiInputLabel-root.Mui-focused': {\n                      color: theme === 'light' ? '#54ADFF' : '#183a3d',\n                    },\n                    '& .MuiOutlinedInput-root': {\n                      '& fieldset': {\n                        borderRadius: 40,\n                        border: `1px solid ${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n\n                      '&:hover fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#d9d2d2'\n                        }`,\n                      },\n                      '&.Mui-focused fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                        borderWidth: '2px',\n                      },\n                      '& .MuiInputBase-input': {\n                        color: theme === 'dark' && '#d9d2d2',\n                      },\n                    },\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        edge=\"end\"\n                        size=\"small\"\n                      >\n                        {showPassword ? (\n                          <Visibility\n                            style={{\n                              color: theme === 'dark' ? '#2f5a5f' : blue[300],\n                            }}\n                          />\n                        ) : (\n                          <VisibilityOff\n                            style={{\n                              color: theme === 'dark' ? '#2f5a5f' : blue[300],\n                            }}\n                          />\n                        )}\n                        {}\n                      </IconButton>\n                    ),\n                  }}\n                  onChange={handleChange}\n                  value={values.password}\n                  error={touched.password && Boolean(errors.password)}\n                  helperText={touched.password && errors.password}\n                />\n              </Box>\n              <Box\n                sx={{\n                  marginBottom: '10px',\n                  display: 'flex',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <TextField\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  label={t(\"Confirm password\")}\n                  size=\"small\"\n                  fullWidth\n                  sx={{\n                    '& .MuiInputLabel-root': {\n                      color: theme === 'dark' && '#b2abab',\n                    },\n                    '& .MuiInputLabel-root.Mui-focused': {\n                      color: theme === 'light' ? '#54ADFF' : '#183a3d',\n                    },\n                    '& .MuiOutlinedInput-root': {\n                      '& fieldset': {\n                        borderRadius: 40,\n                        border: `1px solid ${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n                      '&:hover fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n                      '&.Mui-focused fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                        borderWidth: '2px',\n                      },\n                      '& .MuiInputBase-input': {\n                        color: theme === 'dark' && '#d9d2d2',\n                      },\n                    },\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowConfirmPassword}\n                        edge=\"end\"\n                        size=\"small\"\n                      >\n                        {showConfirmPassword ? (\n                          <Visibility\n                            style={{\n                              color: theme === 'dark' ? '#2f5a5f' : blue[300],\n                            }}\n                          />\n                        ) : (\n                          <VisibilityOff\n                            style={{\n                              color: theme === 'dark' ? '#2f5a5f' : blue[300],\n                            }}\n                          />\n                        )}\n                      </IconButton>\n                    ),\n                  }}\n                  onChange={handleChange}\n                  value={values.confirmPassword}\n                  error={\n                    touched.confirmPassword && Boolean(errors.confirmPassword)\n                  }\n                  helperText={touched.confirmPassword && errors.confirmPassword}\n                />\n              </Box>\n              <div className={css.buttonContainer}>\n                <button type=\"submit\" className={css.button}>\n                  {t(\"Registration\")}\n                </button>\n              </div>\n              <p className={css.questionText}>\n                {t(\"Already have an account?\")}{' '}\n                <Link to=\"/login\" className={css.loginLink}>\n                  {t(\"Login\")}\n                </Link>\n              </p>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/auth/auth-selectors';\n\nimport Loader from 'shared/components/Loader/Loader';\n\nimport { RegisterFormDetails } from './RegisterFormDetails';\n\nconst RegisterForm = () => {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <>\n      {isLoading && <Loader />}\n      <RegisterFormDetails />\n    </>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionMain\":\"RegisterPage_sectionMain__CMxya\",\"myСomponent\":\"RegisterPage_myСomponent__WYYX-\",\"dark\":\"RegisterPage_dark__6Y95v\"};","import { useContext } from 'react';\nimport { ThemeContext } from '../../shared/hooks/context/ThemeProvider';\n\nimport RegisterForm from 'modules/RegisterForm/RegisterForm';\nimport css from './RegisterPage.module.css';\n\nconst RegisterPage = () => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <div\n      className={`${css.myСomponent} ${\n        theme === 'light' ? css.light : css.dark\n      }`}\n    >\n      <section className={css.sectionMain}>\n        <div className=\"container\">\n          <RegisterForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["registerSchema","yup","shape","name","required","matches","email","password","min","max","confirmPassword","oneOf","data","RegisterFormDetails","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","theme","useContext","ThemeContext","t","useTranslation","navigate","useNavigate","handleClickShowPassword","show","handleClickShowConfirmPassword","dispatch","useDispatch","handleFormSubmit","values","register","className","css","initialValues","onSubmit","validationSchema","errors","touched","handleSubmit","handleChange","Box","sx","marginBottom","display","alignItems","TextField","type","label","size","fullWidth","borderRadius","color","border","borderColor","borderWidth","onChange","value","error","Boolean","helperText","InputProps","endAdornment","IconButton","onClick","edge","Visibility","style","blue","VisibilityOff","to","isLoading","useSelector","selectIsLoading","Loader"],"sourceRoot":""}