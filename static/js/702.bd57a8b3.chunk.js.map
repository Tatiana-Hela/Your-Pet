{"version":3,"file":"static/js/702.bd57a8b3.chunk.js","mappings":"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","sources":["webpack://your-pet-frontend/./src/modules/Notices/NoticesSearch/NoticesSearch.module.css?a893","modules/Notices/NoticesSearch/NoticesSearch.jsx","icons/PlusIcon.jsx","webpack://your-pet-frontend/./src/modules/Notices/NoticesCategoriesNav/NoticesCategoriesNav.module.css?448c","modules/Notices/NoticesCategoriesNav/NoticesCategoriesNav.jsx","shared/components/Pagination/PaginationNotices.jsx","webpack://your-pet-frontend/./src/pages/NoticesPage/NoticesPage.module.css?b3b0","pages/NoticesPage/NoticesPage.jsx","webpack://your-pet-frontend/./src/shared/components/ScrollButton/ScrollButton.module.css?a74b","shared/components/ScrollButton/ScrollButton.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"placeholder\":\"NoticesSearch_placeholder__7c0Oy\",\"inputContainer\":\"NoticesSearch_inputContainer__q9qO2\",\"title\":\"NoticesSearch_title__eWVAT\",\"myСomponent\":\"NoticesSearch_myСomponent__hTkJc\",\"dark\":\"NoticesSearch_dark__0L6pG\"};","import React, { useState, useCallback } from 'react';\nimport { useContext } from 'react';\nimport { ThemeContext } from 'shared/hooks/context/ThemeProvider';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputAdornment, IconButton, Input } from '@mui/material';\nimport { Search, Clear } from '@mui/icons-material';\nimport {\n  fetchAllFavoriteNotices,\n  fetchNoticesByCategory,\n  fetchNoticesByOwn,\n} from 'redux/notices/noticesOperations';\nimport { selectCategory } from 'redux/notices/noticesSelectors';\nimport { useLocation } from 'react-router-dom';\n\nimport css from '../NoticesSearch/NoticesSearch.module.css';\nimport { toastInfo } from 'shared/toastify/toastify';\n\nconst NoticesSearch = () => {\n  const dispatch = useDispatch();\n  const [keyword, setKeyword] = useState('');\n  const location = useLocation();\n  const categoryIsLoginUser = location.pathname.split('/')[2];\n  const category = useSelector(selectCategory);\n\n  const { t } = useTranslation();\n  const { theme } = useContext(ThemeContext);\n\n  const handleClear = () => {\n    setKeyword('');\n    try {\n      if (categoryIsLoginUser === 'own') {\n        dispatch(fetchNoticesByOwn({ query: '', page: 1 }));\n      } else if (categoryIsLoginUser === 'favorite') {\n        dispatch(fetchAllFavoriteNotices({ query: '', page: 1 }));\n      } else if (category) {\n        dispatch(\n          fetchNoticesByCategory({\n            categoryName: category,\n            query: '',\n            page: 1,\n          })\n        );\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleKeywordChange = e => {\n    const query = e.target.value;\n    setKeyword(query);\n    if (query === '') {\n      try {\n        if (categoryIsLoginUser === 'own') {\n          dispatch(fetchNoticesByOwn({ query: '', page: 1 }));\n        } else if (categoryIsLoginUser === 'favorite') {\n          dispatch(fetchAllFavoriteNotices({ query: '', page: 1 }));\n        } else if (category) {\n          dispatch(\n            fetchNoticesByCategory({\n              categoryName: category,\n              query: '',\n              page: 1,\n            })\n          );\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const trimmedKeyword = keyword.trim();\n\n      if (trimmedKeyword === '') {\n        toastInfo(t('Please enter something'));\n        return;\n      }\n      try {\n        if (categoryIsLoginUser === 'own') {\n          dispatch(fetchNoticesByOwn(trimmedKeyword, 1));\n        } else if (categoryIsLoginUser === 'favorite') {\n          dispatch(fetchAllFavoriteNotices(trimmedKeyword, 1));\n        } else if (category) {\n          dispatch(\n            fetchNoticesByCategory({\n              categoryName: category,\n              query: trimmedKeyword,\n              page: 1,\n            })\n          );\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [category, categoryIsLoginUser, dispatch, keyword,t]\n  );\n\n  return (\n          <div\n        className={`${css.myСomponent} ${\n          theme === 'light' ? css.light : css.dark\n        }`}\n      >\n    <div className={css.inputContainer}>\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={keyword}\n          onChange={handleKeywordChange}\n          placeholder={t(\"Search\")}\n          disableUnderline\n          style={{\n            borderRadius: '20px',\n            backgroundColor: '#FFFFFF',\n            background: 'transparent',\n            border: '1px solid #aeadad',\n            padding: '0px 14px 0px 20px',\n            height: '43px',\n            boxShadow: '3px 8px 14px rgba(136, 198, 253, 0.19)',\n          }}\n          inputProps={{\n            className: css.placeholder,\n          }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton type=\"submit\" style={{ color: '#54ADFF' }}>\n                <Search />\n              </IconButton>\n              {keyword && (\n                <IconButton onClick={handleClear} style={{ color: '#FFC107' }}>\n                  <Clear />\n                </IconButton>\n              )}\n            </InputAdornment>\n          }\n          fullWidth\n        />\n      </form>\n      </div>\n      </div>\n  );\n};\n\nexport default React.memo(NoticesSearch);\n","import * as React from 'react';\n\nfunction PlusIcon(props) {\n  return (\n    <svg\n      width={20}\n      height={20}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M12 20v-8m0 0V4m0 8h8m-8 0H4\"\n        stroke={props.color}\n        strokeWidth={1.5}\n          />\n    </svg>\n  );\n}\n\nexport default PlusIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"navList\":\"NoticesCategoriesNav_navList__gDHKd\",\"navLink\":\"NoticesCategoriesNav_navLink__D31Pg\",\"active\":\"NoticesCategoriesNav_active__lp+RN\",\"wrapper\":\"NoticesCategoriesNav_wrapper__TZJWJ\",\"btnContainer\":\"NoticesCategoriesNav_btnContainer__ilOeR\",\"btn\":\"NoticesCategoriesNav_btn__r-ijg\",\"pulse-animation\":\"NoticesCategoriesNav_pulse-animation__a4lNI\",\"iconBtn\":\"NoticesCategoriesNav_iconBtn__MNr6s\",\"myСomponent\":\"NoticesCategoriesNav_myСomponent__1sBBI\",\"dark\":\"NoticesCategoriesNav_dark__8rX2o\"};","import React from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { ThemeContext } from 'shared/hooks/context/ThemeProvider';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';\nimport * as toasty from '../../../shared/toastify/toastify';\n// import Filter from '../Filter/Filter';\nimport PlusIcon from 'icons/PlusIcon';\n\nimport css from './NoticesCategoriesNav.module.css';\n\n\n\nconst getClassNameLink = ({ isActive }) => {\n  const className = isActive ? `${css.navLink} ${css.active}` : css.navLink;\n  return className;\n};\n\nconst NoticesCategoriesNav = ({ onOwnClick, onFavoriteClick }) => {\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const { theme } = useContext(ThemeContext);\n  const { t } = useTranslation();\n  \nconst link = [\n  { to: 'sell', text: t('sell') },\n  { to: 'lost-found', text: t('lost/found') },\n  { to: 'for-free', text: t('in good hands') },\n];\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n      toasty.toastInfo(t('You must be logged in'));\n      return;\n    } else {\n      navigate('/add-pet');\n    }\n  };\n\n  return (\n    <div\n      className={`${css.myСomponent} ${\n        theme === 'light' ? css.light : css.dark\n      }`}\n    >\n      <div className={css.wrapper}>\n        <ul className={css.navList}>\n          {link.map(element => (\n            <li key={element.to}>\n              <NavLink to={element.to} className={getClassNameLink}>\n                {element.text}\n              </NavLink>\n            </li>\n          ))}\n          {isLoggedIn && (\n            <>\n              <li key=\"own\">\n                <NavLink\n                  to=\"own\"\n                  className={getClassNameLink}\n                  onClick={() => {\n                    onOwnClick();\n                  }}\n                >\n                  {t(\"my ads\")}\n                </NavLink>\n              </li>\n              <li key=\"favorite\">\n                <NavLink\n                  to=\"favorite\"\n                  className={getClassNameLink}\n                  onClick={() => {\n                    onFavoriteClick();\n                  }}\n                >\n                  {t(\"favorite ads\")}\n                </NavLink>\n              </li>\n            </>\n          )}\n        </ul>\n        <div className={css.btnContainer}>\n          {/* <Filter /> */}\n          <button className={css.btn} onClick={handleClick}>\n            {t(\"Add Pet\")}<PlusIcon color=\"#FEF9F9\" className={css.iconBtn} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import React from 'react';\nimport { useContext } from 'react';\nimport { ThemeContext } from 'shared/hooks/context/ThemeProvider';\nimport { Stack, Pagination, PaginationItem } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\nconst PaginationNotices = ({\n  totalPages,\n  currentCategory,\n  ownCurrentPage,\n  favoriteCurrentPage,\n  onPageChange,\n  currentPage,\n}) => {\n  const currentPageInit =\n    currentCategory === 'own'\n      ? ownCurrentPage\n      : currentCategory === 'favorite'\n      ? favoriteCurrentPage\n      : currentPage;\n\n  const { theme } = useContext(ThemeContext);\n\n  const handlePageChange = (event, page) => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    onPageChange(page);\n  };\n\n  return (\n    <Stack spacing={2}>\n      {totalPages > 1 && (\n        <Pagination\n          count={totalPages}\n          page={currentPageInit}\n          color=\"primary\"\n          variant=\"outlined\"\n          onChange={handlePageChange}\n          sx={{\n            marginX: 'auto',\n            marginBottom: '20px',\n            boxShadow: '3px 8px 14px rgba(136, 198, 253, 0.19)',\n            borderRadius: '45px',\n            padding: '8px 12px',\n            background: `${theme === 'light' ? '#FEF9F9' : 'transparent'}`,\n          }}\n          renderItem={item => (\n            <PaginationItem\n              sx={{\n                '&.Mui-selected': {\n                  background: '#54ADFF',\n                  color: '#FEF9F9',\n                  border: 'none',\n                },\n                background: `${theme === 'light' ? '#FEF9F9' : '#538690'}`,\n                color: '#CCE4FB',\n                borderColor: '#CCE4FB',\n              }}\n              icon={\n                item.type === 'previous' ? (\n                  <ArrowBackIcon />\n                ) : (\n                  <ArrowForwardIcon />\n                )\n              }\n              component=\"button\"\n              onClick={e => handlePageChange(e, item.page)}\n              selected={item.page === currentPage}\n              {...item}\n            />\n          )}\n        />\n      )}\n    </Stack>\n  );\n};\n\nexport default PaginationNotices;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NoticesPage_title__oGlUk\",\"myСomponent\":\"NoticesPage_myСomponent__l5nU2\",\"dark\":\"NoticesPage_dark__D0X2-\"};","import React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useContext } from 'react';\nimport { ThemeContext } from 'shared/hooks/context/ThemeProvider';\nimport { useTranslation } from 'react-i18next';\nimport {\n  fetchNoticesByCategory,\n  fetchNoticesByOwn,\n  fetchAllFavoriteNotices,\n} from '../../redux/notices/noticesOperations';\nimport {\n  getAllNotices,\n  selectNoticesLoading,\n  selectNoticesTotalPages,\n  selectNoticesPage,\n} from '../../redux/notices/noticesSelectors';\n\nimport NoticesSearch from 'modules/Notices/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'modules/Notices/NoticesCategoriesNav/NoticesCategoriesNav';\nimport PaginationNotices from 'shared/components/Pagination/PaginationNotices';\n\nimport css from '../NoticesPage/NoticesPage.module.css';\nimport Loader from 'shared/components/Loader/Loader';\nimport ScrollButton from 'shared/components/ScrollButton/ScrollButton';\n\nconst NoticesPage = () => {\n  const dispatch = useDispatch();\n  const notices = useSelector(getAllNotices);\n  const loading = useSelector(selectNoticesLoading);\n  const totalPages = useSelector(selectNoticesTotalPages);\n  const currentPage = useSelector(selectNoticesPage);\n  const location = useLocation();\n  const currentCategory = location.pathname.split('/')[2];\n  const [ownCurrentPage, setOwnCurrentPage] = useState(1);\n  const [favoriteCurrentPage, setFavoriteCurrentPage] = useState(1);\n  const { theme } = useContext(ThemeContext);\nconst { t } = useTranslation();\n\n  useEffect(() => {\n    if (currentCategory === 'sell') {\n      dispatch(\n        fetchNoticesByCategory({\n          categoryName: 'sell',\n          query: '',\n          page: 1,\n        })\n      );\n      return;\n    }\n    if (currentCategory === 'for-free') {\n      dispatch(\n        fetchNoticesByCategory({\n          categoryName: 'for-free',\n          query: '',\n          page: 1,\n        })\n      );\n      return;\n    }\n    if (currentCategory === 'lost-found') {\n      dispatch(\n        fetchNoticesByCategory({\n          categoryName: 'lost-found',\n          query: '',\n          page: 1,\n        })\n      );\n      return;\n    }\n    if (currentCategory === 'own') {\n      dispatch(fetchNoticesByOwn({ query: '', page: ownCurrentPage }));\n      return;\n    }\n    if (currentCategory === 'favorite') {\n      dispatch(\n        fetchAllFavoriteNotices({ query: '', page: favoriteCurrentPage })\n      );\n      return;\n    }\n  }, [currentCategory, dispatch, ownCurrentPage, favoriteCurrentPage]);\n\n  const onPageChange = page => {\n    if (currentCategory === 'own') {\n      dispatch(fetchNoticesByOwn({ query: '', page }));\n      return;\n    } else if (currentCategory === 'favorite') {\n      dispatch(fetchAllFavoriteNotices({ query: '', page }));\n      return;\n    } else {\n      dispatch(\n        fetchNoticesByCategory({\n          categoryName: currentCategory,\n          query: '',\n          page,\n        })\n      );\n    }\n  };\n\n  const handleOwnClick = () => {\n    dispatch(fetchNoticesByOwn({ query: '', page: ownCurrentPage }));\n  };\n\n  const handleFavoriteClick = () => {\n    dispatch(fetchAllFavoriteNotices({ query: '', page: favoriteCurrentPage }));\n  };\n\n  const handleOwnPageChange = page => {\n    setOwnCurrentPage(page);\n    dispatch(fetchNoticesByOwn({ query: '', page }));\n  };\n\n  const handleFavoritePageChange = page => {\n    setFavoriteCurrentPage(page);\n    dispatch(fetchAllFavoriteNotices({ query: '', page }));\n  };\n\n  return (\n    <div\n      className={`${css.myСomponent} ${\n        theme === 'light' ? css.light : css.dark\n      }`}\n    >\n      <div className=\"container\">\n        <h2 className={css.title}>{t(\"Find your favorite pet\")}</h2>\n        <NoticesSearch />\n        <NoticesCategoriesNav\n          onOwnClick={handleOwnClick}\n          onFavoriteClick={handleFavoriteClick}\n        />\n        {loading && <Loader />}\n        {notices && <Outlet />}\n\n        <PaginationNotices\n          currentPage={currentPage}\n          totalPages={totalPages}\n          currentCategory={currentCategory}\n          ownCurrentPage={ownCurrentPage}\n          favoriteCurrentPage={favoriteCurrentPage}\n          onPageChange={page => {\n            if (currentCategory === 'own') {\n              handleOwnPageChange(page);\n            } else if (currentCategory === 'favorite') {\n              handleFavoritePageChange(page);\n            } else {\n              onPageChange(page);\n            }\n          }}\n        />\n        <ScrollButton />\n      </div>\n    </div>\n  );\n};\n\nexport default NoticesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"scrollButton\":\"ScrollButton_scrollButton__NLri3\"};","import React, { useState, useEffect } from 'react';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\nimport css from './ScrollButton.module.css';\n\nconst ScrollButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrolled = window.pageYOffset;\n      if (scrolled > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <div className={css.scrollButton} onClick={scrollToTop}>\n          <KeyboardArrowUpIcon fontSize='large' />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ScrollButton;\n"],"names":["NoticesSearch","dispatch","useDispatch","useState","keyword","setKeyword","categoryIsLoginUser","useLocation","pathname","split","category","useSelector","selectCategory","t","useTranslation","theme","useContext","ThemeContext","handleSubmit","useCallback","e","preventDefault","trimmedKeyword","trim","fetchNoticesByOwn","fetchAllFavoriteNotices","fetchNoticesByCategory","categoryName","query","page","error","console","log","toastInfo","className","css","onSubmit","Input","value","onChange","target","placeholder","disableUnderline","style","borderRadius","backgroundColor","background","border","padding","height","boxShadow","inputProps","endAdornment","InputAdornment","position","IconButton","type","color","Search","onClick","Clear","fullWidth","React","props","width","fill","xmlns","d","stroke","strokeWidth","getClassNameLink","isActive","onOwnClick","onFavoriteClick","navigate","useNavigate","isLoggedIn","selectIsLoggedIn","link","to","text","map","element","toasty","totalPages","currentCategory","ownCurrentPage","favoriteCurrentPage","onPageChange","currentPage","currentPageInit","handlePageChange","event","window","scrollTo","top","behavior","Stack","spacing","Pagination","count","variant","sx","marginX","marginBottom","renderItem","item","PaginationItem","borderColor","icon","ArrowBack","ArrowForward","component","selected","notices","getAllNotices","loading","selectNoticesLoading","selectNoticesTotalPages","selectNoticesPage","setOwnCurrentPage","setFavoriteCurrentPage","useEffect","Loader","handleOwnPageChange","handleFavoritePageChange","ScrollButton","isVisible","setIsVisible","handleScroll","scrolled","pageYOffset","addEventListener","removeEventListener","KeyboardArrowUp","fontSize"],"sourceRoot":""}